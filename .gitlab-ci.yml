#image: whois-build:1
image: maven:3.6-jdk-8

#services:
#  - mariadb:10.2

variables:
#  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: -Dmaven.repo.local=/cache/maven.repository
#  MYSQL_ROOT_PASSWORD: root

stages:
  - build
  - test
  - deploy

cache:
  key: ${CI_JOB_NAME}
  paths:
    #- .m2/repository
    - target/
    - "*/target/"

build:
  stage: build
  before_script:
    - apt-get update
    - apt-get -y install make gcc
  script:
    - mvn $MAVEN_OPTS clean install -U -Prelease
  artifacts:
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"

.it_template: &it_env
  services:
    - mariadb:10.2
  variables:
    MYSQL_ROOT_PASSWORD: root
  stage: test
  before_script:
    - apt-get update
    - apt-get -y install mysql-client make gcc
    - mysql -uroot -proot -h mariadb -e "CREATE USER 'dbint'@'%' IDENTIFIED BY '';"
    - mysql -uroot -proot -h mariadb -e "GRANT ALL ON *.* TO 'dbint'@'%' WITH GRANT OPTION;"
  artifacts:
    reports:
      junit:
        - "*/target/surefire-reports/TEST-*.xml"
        - "*/target/failsafe-reports/TEST-*.xml"

whois-it-suite1:
  <<: *it_env
  script:
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-api -am
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-client -am
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-commons -am
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-db -am
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-endtoend -am

whois-it-suite2:
  <<: *it_env
  script:
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-nrtm -am
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-query -am
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-rpsl -am
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-scheduler -am
    - mvn $MAVEN_OPTS -Ddb.host=mariadb integration-test -Pintegration -pl whois-update -am

end-to-end-test:
  <<: *it_env
  script:
    - mvn -Ddb.host=mariadb $MAVEN_OPTS install -Pendtoend

deploy-dev:
  stage: deploy
  script:
    - git clone http://dbase:$DB_OPERATIONAL_DEPLOY_TOKEN@gitlab.ripe.net/sbuskens/db-operational.git
    - cp backend/target/backend-$CI_COMMIT_SHA.jar db-operational/deployment/db-web-ui-spring-$CI_COMMIT_SHA.jar
    - cd db-operational/deployment
    - ./stage.sh -p db-web-ui -e dev db-web-ui-spring-$CI_COMMIT_SHA.jar
    - ./sync.sh -p db-web-ui -e dev
    - bash ./deploy.sh -p db-web-ui -e dev
  when: manual
